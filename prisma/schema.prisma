generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum Role {
  USER
  DONATOR
  ADMIN
}

enum Platform {
  DISCORD
  STEAM
}

model Badge {
  id          String   @id @default(uuid())
  name        String   @unique
  description String
  iconUrl     String?
  createdAt   DateTime @default(now())

  users       UserBadge[]
}

model UserBadge {
  userId    String
  badgeId   String
  awardedAt DateTime @default(now())

  user  User  @relation(fields: [userId], references: [id], onDelete: Cascade)
  badge Badge @relation(fields: [badgeId], references: [id], onDelete: Cascade)

  @@id([userId, badgeId])
}

model User {
  id                String          @id @default(uuid())
  username          String          @unique
  createdAt         DateTime        @default(now())
  lastActiveAt      DateTime        @default(now())
  lastClaimedDaily  DateTime?
  role              Role            @default(USER)
  balance           Float           @default(100)
  level             Int             @default(1)
  xp                Float           @default(0)
  badges            UserBadge[]
  accounts          Account[]     

  @@index([username])
}

model Account {
  id          String    @id @default(uuid())
  userId      String
  platform    Platform
  platformId  String
  username    String
  createdAt   DateTime  @default(now())
  
  user        User      @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([platform, platformId])
  @@unique([platform, username])
  @@index([platformId])
}